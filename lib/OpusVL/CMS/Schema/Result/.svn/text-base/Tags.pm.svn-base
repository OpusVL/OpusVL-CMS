package OpusVL::CatalystX::SimpleCMS::Schema::Result::Tags;

=head1 NAME

OpusVL::CatalystX::SimpleCMS::Schema::Result::Tags -

=head1 DESCRIPTION

Schema configuration of the Tags in the SimpleCMS

=head1 METHODS

  tags - 

=head1 BUGS

=head1 AUTHOR

OpusVL - Nuria

=head1 COPYRIGHT & LICENSE

Copyright 2009 the above author(s).

This sofware is free software, and is licensed under the same terms as perl itself.

=cut
###########################################################################################

use DBIx::Class;
use Hash::Merge qw/merge/;
use Moose;
extends 'DBIx::Class';

__PACKAGE__->load_components("InflateColumn::DateTime", "Core");
__PACKAGE__->table("tags");
__PACKAGE__->add_columns(
  "tag_id",
  {
    data_type => "integer",
    default_value => "nextval('tags_tag_id_seq'::regclass)",
    is_nullable => 0,
    size => 4,
  },
  "group_id",
  { data_type => "integer", default_value => undef, is_nullable => 0, size => 4 },
  "name",
  {
    data_type => "character varying",
    default_value => undef,
    is_nullable => 0,
    size => 128,
  },
);
__PACKAGE__->set_primary_key("tag_id");
__PACKAGE__->has_many(
  "page_tags",
  "OpusVL::CatalystX::SimpleCMS::Schema::Result::PageTags",
  { "foreign.tag_id" => "self.tag_id" },
);
__PACKAGE__->belongs_to(
  "group",
  "OpusVL::CatalystX::SimpleCMS::Schema::Result::TagGroups",
  { group_id => "group_id" },
);


###########################################################################################
# Accessors - 
###########################################################################################

=head2 tags
 Merges the pages tags with all thoughs that have been cascaded.
=cut
sub tags {
	my $self = shift;
	my $tags = merge( $self->page_tags, $self->cascaded_tags,);
}

##
1;
